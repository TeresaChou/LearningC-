## Variables 變數 ##

通常在學習程式語言時，第1堂課都會學習變數，因為變數的使用是大部份程式語言的基礎。Python處理變數的方式是弱型別，與常見的強型別語言（ex: C++）不同，其實作的方式較複雜，初學者不易理解。在這裡為了熟悉變數的使用，我們簡單介紹變數的概念。但要記住很多只是表面的概念，在Python內部並不真的是這樣。

變數（variable）就像是一個容器，為了要處理不同的資料，我們向電腦索取一個一個的容器來儲存這些資料。例如：

```
a = 10
b = 'love'  // 在python單引號和雙引號都是字串
c = False
```

變數一旦被宣告之後，也可以隨意的改變其中的值

```
number = 10
print(number)     // 10
number = 20
print(number)     // 20
```

要記住，變數要經過宣告之後，電腦才會認得，所以沒有被宣告的變數是無法被使用的。

```
a = 100
print(b)       // error! 'b' is not defined.
```

那變數的名字該怎麼取呢？有幾個簡單的規則：
1. 不可以使用保留字，也就是python已經用掉的字，如：and, True, if, return不可以用這些字在之後的課程中都會學到。
2. 不可以使用底線以外的標點符號，不可以使用空格，而且第一個字不可以是數字。像 1_student, ^_^, apple-pie 這些都是不行的。如果你想要組合不同的字，常見的作法是利用底線
常見的作法是利用底線或大小寫，如 ChurchOfChrist, movie_list 等等。
3. 儘量取有意義的名字，讓自己的程式容易閱讀，也不容易搞錯。像 a, bb 這種就是比較沒有意義的名字，而 number_of_student, YourBMI 就是比較好懂不易搞錯的名字。


## Operator 運算子 ##


變數被宣告之後，我們就可以用operator對變數執行不同的運算。每個operator都有不同的方向和priority。
= (Assign)就是一個operator，它的方向則是從右到左。如果我們這樣打：

```
   a = 1
   b = 2
   c = 3
   a = b = c
```

你可以試著把這3個變數印出來，會發現3個的值都是3，因為assign是從右到左執行的，python會先執行 b = c ，
然後才是 a = b 。

記得assign和數學中的等於是不一樣的，所以我們可以這樣做：

```
a = 10
a = a + 3   
print(a)    // 13
```

因為這樣的用法非常的常見，所以又提供了幾個簡化用的operator，+=, -=, *=, /=, %= 。下面的程式和上面的例子結果是一模一樣的。

```
a = 10
a += 3
print(a)    // 13
```

數學運算符號也是常用的operator，有+-*/ (加減乘除)和 % (mod, 相除取餘數的意思)。它們的方向都是從左到右，
並依循先乘除後加減，需要的時候也可以加括號()。還有一些好用的數學運算子，如 // 代表整數除法，也就是除了之後無條件捨去小數。還有 ** 代表次方，如 x**2 就是x的平方。

在程式中進行數學運算時還要注意的一點是，每個變數都有他的容量範圍。例如當我們要存pi這個常數時，因為pi有無線位數，而變數不可能有無限的容量，因此一定會和理論值有所誤差。你可以試試以下的例子，在python中打入

```
a = 1/3
print(1-a-a-a)    // 答案會是0嗎？
```

另外一些常見的operator有布林運算子，也就是邏輯運算子，以及比較用的運算子，包括：

// 這3個字本身就是運算子
* not    非
* and    且    
* or     或

* ==    equal to
* !=    not equal to   
* >     larger than
* >=    not less than
* <     less than
* <=    not larger than

這些operator的priority是 not > 數學 > 比較 > and/or。要注意的是，在使用比較時一次只能比兩個值，以下是錯誤和正確的示範：

``` 
a < b < c         (X)
a < b and b < c   (O)
```

TODO: Operator_bool.py