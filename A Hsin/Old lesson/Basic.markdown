# Basics #

上堂課的複習：

* 打開VScode裡面的terminal: Ctrl + `
* 在terminal裡面移動:
   * 顯示資料夾內容: dir
   * 進入某個資料夾: cd
   * 回到上一層資料夾: cd ..
* 在Github中: 
   * 建立儲存點: commit
   * 上傳: push
   * 下載更新: pull
* 在terminal中打開python: python
* 在terminal中用python跑檔案: python myFile.py

p.s. 這個檔案是用markdown寫成，他是github上流行的一種語法。你可以在VScode的左邊第四個圖案"extension(套件)"中找"Markdown Preview Github Styling"，安裝之後回到這個檔案，按右上角的兩個框框加放大鏡的圖案，就可以看到這份筆記排版的結果。當你在文字中看到```，不要去管他，那不是程式的一部份，是為了markdown排版之用。

=============== 正文開始 ==================

## Comments ##

註解是在程式中寫筆記的方法，python在編譯的時候會把註解忽略掉，也就是說是給人看的筆記，電腦不會看到。保持寫註解的好習慣，會大大提升你的程式碼的可讀性，也會讓你在寫程式的時候更有條理。有些大師主張最好的註解就是沒有註解，那是因為他們將自己訓練出非常清楚好懂的coding style，也就是說他們的程式碼本身就像文章一樣好懂。但對初學者和一般人而言，多寫註解還是最好的方法。

Python 中的註解是用 # 來代表 (見input.py前兩行)。VScode有個好用的功能，就是你把要註解的幾行字反白起來，按Ctrl + /，他就會幫你加上註解的符號。但記得不同檔案的註解語法不同，在.py裡面才會是加上你要的#。


## Input and Output ##

Python若要在螢幕上印字，就要使用print()這個function，並把要印的內容寫在括弧中，例如:

```print("Hello World!")```

如果要印出很多個東西，可以用逗點隔開，python預設會幫你用空格隔開。

```
a = "Hello"
b = "World!"
print(a, b) 
```

就會跑出```Hello World!```。你可以打開python自己試試看。

input.py的最後一行示範了一個不會印出括號的輸出方法。關於更複雜的輸出方式還有很多，我們以後用到再慢慢說。

通常程式除了自己印東西出來，也要能和使用者溝通，也就是讓使用者輸入資料。最簡單的輸入就是input()這個function。括弧裡放的東西會先印出來，成為給使用者的提示，而input本身則會傳回使用者輸入的值。什麼意思呢？例如，我想要讓使用者輸入一個字，那我可以用"word"這個變數名稱來儲存這個輸入的字。

```
word = input("Type in a word: ")
print("You just typed in:", word)
```

這樣就會把使用者輸入的字再印出來了。你可以玩玩看 input.py，他做的是一樣的事。

## Data Type  ##

電腦中實際記憶體儲存的都是0跟1，透過不同的解碼方式，才被轉換成不同的意思。例如99這個數字，如果當作字元來看，就會變成'c'。所以在程式中確定每個變數的型別是很重要的。python的變數在宣告的時候自己會幫你判斷型別，你可以用type()來檢查變數的型別。例如：

```
a = 10
print(type(a))    # class 'int'
b = "b"
print(type(b))    # class 'str'
```
python中的主要型別有
* int: 整數
* float: 浮點數，也就是小數
* str: 字串
* bool: 布林值，就是True或False

如果我們想要把變數從一個型別轉換成另一個型別，可以在型別後面加括號，然後把變數放進去。最常見的例子就是，input()傳回來的值一律都是字串，如果我們想要把輸入內容當數字使用，就需要用到型別轉換。你可以看看type.py中的範例怎麼使用這樣的技巧。

## Operator ##

Python中基本的數學運算就跟我們平常的加減乘除是一樣的(+, -, *, /)，你可以先試著用它們來完成基本的運算和這次的功課。下堂課我們會介紹更多不同的operator。

